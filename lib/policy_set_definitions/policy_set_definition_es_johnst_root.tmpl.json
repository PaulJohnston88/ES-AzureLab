{
    "name": "Johnst-Root",
    "type": "Microsoft.Authorization/policySetDefinitions",
    "apiVersion": "2021-06-01",
    "scope": null,
    "properties": {
      "policyType": "Custom",
      "displayName": "Johnst Root",
      "description": "Contains the core policies applicable to the Johnst org that need to be assigned at the Johnst Root MG",
      "metadata": {
        "version": "1.0.0",
        "category": "General"
      },
      "parameters": {
        "Automation account variables should be encrypted": {
            "type": "String",
            "defaultValue": "Deny",
            "allowedValues": [
              "Audit",
              "Deny",
              "Disabled"
            ],
            "metadata": {
              "displayName": "Automation account variables should be encrypted",
              "description": "It is important to enable encryption of Automation account variable assets when storing sensitive data"
            }
        },
        "Azure Cosmos DB accounts should have firewall rules": {
            "type": "String",
            "defaultValue": "Audit",
            "allowedValues": [
              "Audit",
              "Deny",
              "Disabled"
            ],
            "metadata": {
              "displayName": "Azure Cosmos DB accounts should have firewall rules",
              "description": "Firewall rules should be defined on your Azure Cosmos DB accounts to prevent traffic from unauthorized sources. Accounts that have at least one IP rule defined with the virtual network filter enabled are deemed compliant. Accounts disabling public access are also deemed compliant."
            }
        },
        "Azure Event Grid topics should use private link": {
            "type": "String",
            "defaultValue": "Audit",
            "allowedValues": [
              "Audit",
              "Disabled"
            ],
            "metadata": {
              "displayName": "Azure Event Grid topics should use private link",
              "description": "Azure Private Link lets you connect your virtual network to Azure services without a public IP address at the source or destination. The Private Link platform handles the connectivity between the consumer and services over the Azure backbone network. By mapping private endpoints to your Event Grid topic instead of the entire service, you'll also be protected against data leakage risks. Learn more at: https://aka.ms/privateendpoints."
            }
        },
        "An Azure Active Directory administrator should be provisioned for SQL servers": {
            "type": "String",
            "defaultValue": "AuditIfNotExists",
            "allowedValues": [
              "AuditIfNotExists",
              "Disabled"
            ],
            "metadata": {
              "displayName": "An Azure Active Directory administrator should be provisioned for SQL servers",
              "description": "Audit provisioning of an Azure Active Directory administrator for your SQL server to enable Azure AD authentication. Azure AD authentication enables simplified permission management and centralized identity management of database users and other Microsoft services"
            }
        },
        "Auditing on SQL server should be enabled": {
            "type": "String",
            "defaultValue": "AuditIfNotExists",
            "allowedValues": [
              "AuditIfNotExists",
              "Disabled"
            ],
            "metadata": {
              "displayName": "Auditing on SQL server should be enabled",
              "description": "Auditing on your SQL Server should be enabled to track database activities across all databases on the server and save them in an audit log."
            }
        },
        "Key vaults should have soft delete enabled": {
            "type": "String",
            "defaultValue": "Deny",
            "allowedValues": [
              "Audit",
              "Deny",
              "Disabled"
            ],
            "metadata": {
              "displayName": "Key vaults should have soft delete enabled",
              "description": "Deleting a key vault without soft delete enabled permanently deletes all secrets, keys, and certificates stored in the key vault. Accidental deletion of a key vault can lead to permanent data loss. Soft delete allows you to recover an accidentally deleted key vault for a configurable retention period."
            }
        },
        "Azure Monitor log profile should collect logs for categories write, delete, and action": {
            "type": "String",
            "defaultValue": "AuditIfNotExists",
            "allowedValues": [
              "AuditIfNotExists",
              "Disabled"
            ],
            "metadata": {
              "displayName": "Azure Monitor log profile should collect logs for categories 'write,' 'delete,' and 'action'",
              "description": "This policy ensures that a log profile collects logs for categories 'write,' 'delete,' and 'action'"
            }
        },
        "AppServiceTlsVersionEffect": {
          "type": "String",
          "defaultValue": "Append",
          "allowedValues": [
            "Append",
            "Disabled"
          ],
          "metadata": {
            "displayName": "App Service. Appends the AppService WebApp, APIApp, Function App to enable https only",
            "description": "App Service. Appends the AppService sites object to ensure that  HTTPS only is enabled for  server/service authentication and protects data in transit from network layer eavesdropping attacks. Please note Append does not enforce compliance use then deny."
          }
        },
        "AppServiceminTlsVersion": {
          "type": "String",
          "defaultValue": "1.2",
          "allowedValues": [
            "1.2",
            "1.0",
            "1.1"
          ],
          "metadata": {
            "displayName": "App Service. Select version minimum TLS Web App config",
            "description": "App Service. Select version  minimum TLS version for a  Web App config to enforce"
          }
        },
        "Deploys NSG flow logs and traffic analytics to Log Analytics": {
          "type": "String",
          "defaultValue": "Disabled",
          "allowedValues": [
            "DeployIfNotExists",
            "Disabled"
          ],
          "metadata": {
            "displayName": "Deploys NSG flow logs and traffic analytics to Log Analytics",
            "description": "Deploys NSG flow logs and traffic analytics to Log Analytics with a specfied retention period."
          }
        },
        "Deploys NSG flow logs and traffic analytics to Log Analytics - Interval": {
          "type": "Integer",
          "defaultValue": 60,
          "metadata": {
            "displayName": "Traffic Analytics processing interval mins (10/60)"
          }
        },
        "Deploys NSG flow logs and traffic analytics to Log Analytics - Retention": {
          "type": "Integer",
          "defaultValue": 5,
          "metadata": {
            "displayName": "Retention"
          }
        },
        "Deploys NSG flow logs and traffic analytics to Log Analytics - Workspace": {
          "type": "String",
          "defaultValue": "/subscriptions/00000000-0000-0000-0000-000000000000/resourcegroups/${root_scope_id}-mgmt/providers/Microsoft.OperationalInsights/workspaces/${root_scope_id}-la",
          "metadata": {
            "displayName": "Select Log Analytics workspace from dropdown list. If this workspace is outside of the scope of the assignment you must manually grant 'Log Analytics Contributor' permissions (or similar) to the policy assignment's principal ID.",
            "description": "Resource ID of Log Analytics workspace",
            "strongType": "omsWorkspace"
          }
        },
        "Private endpoint should be enabled for PostgreSQL servers": {
          "type": "String",
          "defaultValue": "AuditIfNotExists",
          "allowedValues": [
            "AuditIfNotExists",
            "Disabled"
          ],
          "metadata": {
            "displayName": "Private endpoint should be enabled for PostgreSQL servers",
            "description": "Private endpoint connections enforce secure communication by enabling private connectivity to Azure Database for PostgreSQL. Configure a private endpoint connection to enable access to traffic coming only from known networks and prevent access from all other IP addresses, including within Azure."
          }
        },
        "Private endpoint should be enabled for MariaDB servers": {
          "type": "String",
          "defaultValue": "AuditIfNotExists",
          "allowedValues": [
            "AuditIfNotExists",
            "Disabled"
          ],
          "metadata": {
            "displayName": "Private endpoint should be enabled for MariaDB servers",
            "description": "Private endpoint connections enforce secure communication by enabling private connectivity to Azure Database for MariaDB. Configure a private endpoint connection to enable access to traffic coming only from known networks and prevent access from all other IP addresses, including within Azure."
          }
        },
        "Private endpoint should be enabled for IoT Hub": {
          "type": "String",
          "defaultValue": "Audit",
          "allowedValues": [
            "Audit",
            "Disabled"
          ],
          "metadata": {
            "displayName": "Private endpoint should be enabled for IoT Hub",
            "description": "Private endpoint connections enforce secure communication by enabling private connectivity to IoT Hub. Configure a private endpoint connection to enable access to traffic coming only from known networks and prevent access from all other IP addresses, including within Azure."
          }
        },
        "[Preview]: Private endpoint should be configured for Key Vault": {
          "type": "String",
          "defaultValue": "Audit",
          "allowedValues": [
            "Audit",
            "Deny",
            "Disabled"
          ],
          "metadata": {
            "displayName": "[Preview]: Private endpoint should be configured for Key Vault",
            "description": "Private link provides a way to connect Key Vault to your Azure resources without sending traffic over the public internet. Private link provides defense in depth protection against data exfiltration."
          }
        },
        "Private endpoint should be enabled for MySQL servers": {
          "type": "String",
          "defaultValue": "AuditIfNotExists",
          "allowedValues": [
            "AuditIfNotExists",
            "Disabled"
          ],
          "metadata": {
            "displayName": "Private endpoint should be enabled for MySQL servers",
            "description": "Private endpoint connections enforce secure communication by enabling private connectivity to Azure Database for MySQL. Configure a private endpoint connection to enable access to traffic coming only from known networks and prevent access from all other IP addresses, including within Azure."
          }
        },
        "RDP access from the Internet should be blocked": {
          "type": "String",
          "defaultValue": "Deny",
          "allowedValues": [
            "Audit",
            "Deny",
            "Disabled"
          ],
          "metadata": {
            "displayName": "RDP access from the Internet should be blocked",
            "description": "This policy denies any network security rule that allows RDP access from Internet"
          }
        },
        "Managed identity should be used in your Function App": {
          "type": "String",
          "defaultValue": "AuditIfNotExists",
          "allowedValues": [
            "AuditIfNotExists",
            "Disabled"
          ],
          "metadata": {
            "displayName": "Effect",
            "description": "Enable or disable the execution of the policy"
          }
        },
        "Managed identity should be used in your Web App": {
          "type": "String",
          "defaultValue": "AuditIfNotExists",
          "allowedValues": [
            "AuditIfNotExists",
            "Disabled"
          ],
          "metadata": {
            "displayName": "Effect",
            "description": "Enable or disable the execution of the policy"
          }
        },
        "Managed identity should be used in your API App": {
          "type": "String",
          "defaultValue": "AuditIfNotExists",
          "allowedValues": [
            "AuditIfNotExists",
            "Disabled"
          ],
          "metadata": {
            "displayName": "Effect",
            "description": "Enable or disable the execution of the policy"
          }
        },
        "Subnets should have a Network Security Group - Effect": {
          "type": "String",
          "defaultValue": "Audit",
          "allowedValues": [
            "Audit",
            "Deny",
            "Disabled"
          ],
          "metadata": {
            "displayName": "Effect",
            "description": "Enable or disable the execution of the policy"
          }
        },
        "Subnets should have a Network Security Group - ExcludedSubnets": {
          "type": "Array",
          "defaultValue": ["GatewaySubnet","AzureFirewallSubnet","AzureFirewallManagementSubnet"],
          "metadata": {
            "displayName": "Excluded Subnets",
            "description": "Array of subnet names that are excluded from this policy"
          }
        }
      },
      "policyDefinitions": [
        {
          "policyDefinitionReferenceId": "Automation account variables should be encrypted",
          "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/3657f5a0-770e-44a3-b44e-9431ba1e9735",
          "parameters": {
            "effect": {
              "value": "[parameters('Automation account variables should be encrypted')]"
            }
          },
          "groupNames": []
        },
        {
          "policyDefinitionReferenceId": "Audit VMs that do not use managed disks",
          "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/06a78e20-9358-41c9-923c-fb736d382a4d",
          "groupNames": []
        },
        {
            "policyDefinitionReferenceId": "Azure Cosmos DB accounts should have firewall rules",
            "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/862e97cf-49fc-4a5c-9de4-40d4e2e7c8eb",
            "parameters": {
                "effect": {
                "value": "[parameters('Azure Cosmos DB accounts should have firewall rules')]"
                }
            },
            "groupNames": []
        },
        {
            "policyDefinitionReferenceId": "Azure Event Grid topics should use private link",
            "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/4b90e17e-8448-49db-875e-bd83fb6f804f",
            "parameters": {
                "effect": {
                "value": "[parameters('Azure Event Grid topics should use private link')]"
                }
            },
            "groupNames": []
        },
        {
            "policyDefinitionReferenceId": "An Azure Active Directory administrator should be provisioned for SQL servers",
            "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/1f314764-cb73-4fc9-b863-8eca98ac36e9",
            "parameters": {
                "effect": {
                "value": "[parameters('An Azure Active Directory administrator should be provisioned for SQL servers')]"
                }
            },
            "groupNames": []
        },
        {
            "policyDefinitionReferenceId": "Auditing on SQL server should be enabled",
            "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/a6fb4358-5bf4-4ad7-ba82-2cd2f41ce5e9",
            "parameters": {
                "effect": {
                "value": "[parameters('Auditing on SQL server should be enabled')]"
                }
            },
            "groupNames": []
        },
        {
            "policyDefinitionReferenceId": "Key vaults should have soft delete enabled",
            "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/1e66c121-a66a-4b1f-9b83-0fd99bf0fc2d",
            "parameters": {
                "effect": {
                "value": "[parameters('Key vaults should have soft delete enabled')]"
                }
            },
            "groupNames": []
        },
        {
            "policyDefinitionReferenceId": "Azure Monitor log profile should collect logs for categories 'write,' 'delete,' and 'action'",
            "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/1a4e592a-6a6e-44a5-9814-e36264ca96e7",
            "parameters": {
                "effect": {
                "value": "[parameters('Azure Monitor log profile should collect logs for categories write, delete, and action')]"
                }
            },
            "groupNames": []
        },
        {
          "policyDefinitionReferenceId": "AppServiceminTlsVersion",
          "policyDefinitionId": "${root_scope_resource_id}/providers/Microsoft.Authorization/policyDefinitions/Append-AppService-latestTLS",
          "parameters": {
            "effect": {
              "value": "[parameters('AppServiceTlsVersionEffect')]"
            },
            "minTlsVersion": {
              "value": "[parameters('AppServiceminTlsVersion')]"
            }
          },
          "groupNames": []
        },
        {
          "policyDefinitionReferenceId": "Deploys NSG flow logs and traffic analytics to Log Analytics",
          "policyDefinitionId": "${root_scope_resource_id}/providers/Microsoft.Authorization/policyDefinitions/Deploy-Nsg-FlowLogs-to-LA",
          "parameters": {
            "effect": {
              "value": "[parameters('Deploys NSG flow logs and traffic analytics to Log Analytics')]"
            },
            "Interval": {
              "value": "[parameters('Deploys NSG flow logs and traffic analytics to Log Analytics - Interval')]"
            },
            "Retention": {
              "value": "[parameters('Deploys NSG flow logs and traffic analytics to Log Analytics - Retention')]"
            },
            "Workspace": {
              "value": "[parameters('Deploys NSG flow logs and traffic analytics to Log Analytics - Workspace')]"
            }
          },
          "groupNames": []
        },
        {
          "policyDefinitionReferenceId": "Private endpoint should be enabled for PostgreSQL servers",
          "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/0564d078-92f5-4f97-8398-b9f58a51f70b",
          "parameters": {
              "effect": {
              "value": "[parameters('Private endpoint should be enabled for PostgreSQL servers')]"
              }
          },
          "groupNames": []
        },
        {
          "policyDefinitionReferenceId": "Private endpoint should be enabled for MariaDB servers",
          "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/0a1302fb-a631-4106-9753-f3d494733990",
          "parameters": {
              "effect": {
              "value": "[parameters('Private endpoint should be enabled for MariaDB servers')]"
              }
          },
          "groupNames": []
        },
        {
          "policyDefinitionReferenceId": "Private endpoint should be enabled for IoT Hub",
          "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/0d40b058-9f95-4a19-93e3-9b0330baa2a3",
          "parameters": {
              "effect": {
              "value": "[parameters('Private endpoint should be enabled for IoT Hub')]"
              }
          },
          "groupNames": []
        },
        {
          "policyDefinitionReferenceId": "[Preview]: Private endpoint should be configured for Key Vault",
          "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/5f0bc445-3935-4915-9981-011aa2b46147",
          "parameters": {
              "effect": {
              "value": "[parameters('[Preview]: Private endpoint should be configured for Key Vault')]"
              }
          },
          "groupNames": []
        },
        {
          "policyDefinitionReferenceId": "Private endpoint should be enabled for MySQL servers",
          "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/7595c971-233d-4bcf-bd18-596129188c49",
          "parameters": {
              "effect": {
              "value": "[parameters('Private endpoint should be enabled for MySQL servers')]"
              }
          },
          "groupNames": []
        },
        {
          "policyDefinitionReferenceId": "RDP access from the Internet should be blocked",
          "policyDefinitionId": "${root_scope_resource_id}/providers/Microsoft.Authorization/policyDefinitions/Deny-RDP-From-Internet",
          "parameters": {
              "effect": {
              "value": "[parameters('RDP access from the Internet should be blocked')]"
              }
          },
          "groupNames": []
        },
        {
          "policyDefinitionReferenceId": "Enforce hybrid use benefit",
          "policyDefinitionId": "${root_scope_resource_id}/providers/Microsoft.Authorization/policyDefinitions/Enforce-Hybrid-Use-Ben",
          "groupNames": []
        },
        {
            "policyDefinitionReferenceId": "Managed identity should be used in your Function App",
            "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/0da106f2-4ca3-48e8-bc85-c638fe6aea8f",
            "parameters": {
                "effect": {
                "value": "[parameters('Managed identity should be used in your Function App')]"
                }
            },
            "groupNames": []
        },
        {
            "policyDefinitionReferenceId": "Managed identity should be used in your Web App",
            "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/2b9ad585-36bc-4615-b300-fd4435808332",
            "parameters": {
                "effect": {
                "value": "[parameters('Managed identity should be used in your Web App')]"
                }
            },
            "groupNames": []
        },
        {
            "policyDefinitionReferenceId": "Managed identity should be used in your API App",
            "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/c4d441f8-f9d9-4a9e-9cef-e82117cb3eef",
            "parameters": {
                "effect": {
                "value": "[parameters('Managed identity should be used in your API App')]"
                }
            },
            "groupNames": []
        },
        {
            "policyDefinitionReferenceId": "Subnets should have a Network Security Group",
            "policyDefinitionId": "${root_scope_resource_id}/providers/Microsoft.Authorization/policyDefinitions/Deny-Subnet-Without-Nsg",
            "parameters": {
                "effect": {
                "value": "[parameters('Subnets should have a Network Security Group - Effect')]"
                },
                "excludedSubnets": {
                  "value": "[parameters('Subnets should have a Network Security Group - ExcludedSubnets')]"
                  }
            },
            "groupNames": []
        }
      ],
      "policyDefinitionGroups": null
    }
  }